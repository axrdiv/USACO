Section_5.1
- Fencing the Cows
    模板题，二维凸包。
- Starry Night
    BFS搜索图形。需要考虑旋转的情况。
    但是有一种简便方法：任意点到cluster内其他点的总距离是不随旋转改变的。
- Musical Themes
    使用DP算法，但是有一种快速的方法在 Musical_Theme_sample_1.cpp 中。
    旋律存在变奏的问题，需要每个音符减去前一个音符来消除变奏的影响。
    其中 d[i][j] = min(j-i, d[i-1][j-1]+1) 是一个难点

Section_5.2
- Snail Trail
    DFS搜索，但是需要在递归栈中保留当前的vis矩阵。

Section_5.3
- Milk Measuring
    题目不难，使用BFS搜索状态，对每一个状态使用DP测试能够得出所需要的容量。
- Big Barn
    使用DP解题，但是需要考虑的是，dp[][]中存的是以当前坐标为左上角的最大矩形大小
    状态转移方程为：
        if(dp[i][j])
            dp[i][j] = min(min(dp[i+1][j], dp[i][j+1]), dp[i+1][j+1]) + 1;
        else
            dp[i][j] = 0;
- Window Area
    模拟题，但是难点在于如何计算能够露出来的面积。
            222233
            551133
            551133
            554444
    假设1是被覆盖的面积，则覆盖后将矩形分为5块，除去覆盖的1块后，用dfs计算剩下矩形区域的面积。
- Network of Schools
    很有难度的一道题目，必须求强连通域，然后将强连通域内的点通过缩点考虑成一个点。
    之后的图将会变成一个有向无环图（或森林）。
    第一问求这个图的入度为0的所有点，第二问求max(zero_in_num, zero_out_num)。
    当图内仅存在一个强连通分量时需要特判，即也需要1个投放点和0个新边。
    个别解答使用了Tarjan算法。
    还不会使用，代码见 ./Section_5.3/Strong_Connected_Component.cpp

Section 5.4
- Canada Tour
    一道DP的题目，但是没有做的太明白。
- TeleCowunication
    最小割点问题。可以将每个点分为入点和出点两个点来使用最小割边来解题。
    而最小割边问题可以转换为最大流问题，使用迭代的方法求解。
- Character Recognition
    使用DP的方法进行字符识别。思想简单，但是过程繁琐。需要判断缺少一行的情况和重复一行的情况。
    DP方法保留的是累计误差，通过记录累计误差最小的可能，生成答案。

Section 5.5
- Hidden Password
    字符串比较，外加高性能（避免重复搜索）。
- Two Five
    使用动态规划解题。需要考虑在当前已经确定的字母组合下，剩余字母能够产生多少中不同的组合。
    然后从上到下，从左到右进行填充，依次测试当前位置每种字母的可能性，进而确定字符串。
- Picture
    首先进行离散化，再使用线段树存储总长度。
    线段树的node中，保存len和low两个数据。len表示当前线段区域上的边长，low表示这个线段区域上矩形的下边在哪里。这样如果add()一个新的矩形，判断矩阵的上边和low的关系就可以得出这个矩形是否会影响边长len。对每个新的矩形都要更新low。
    对横坐标和总坐标各使用一次线段树。即可求出总周长。

