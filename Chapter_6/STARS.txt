Section_6.1
- A Rectangular Barn
    单调栈
    对于每一行，都计算当前行能达到的高度height。 对height使用单调栈进行存储。
    对一个新来的高度h，如果小于栈顶所表示的高度。则说明以栈顶为高的矩形面积已经固定了。
    这个矩形右至当前位置j，左至栈中上一个位置的横坐标。高度为栈顶所代表的高度。
    maxArea = max(maxArea, top * (stk.empty() ? j : (j - (stk.top() + 1))))
    这样针对每一行都进行处理，求出最终最大的矩形面积。
- Cow XOR
    异或(xor)有一些优秀的性质
        a ^ b = b ^ a
        (a ^ b) ^ c = a ^ (b ^ c)
    因此，记xors[i]为从开头到位置i的所有异或，这样，一段数据的异或可以表示为
        ans = xors[st] ^ xors[ed]
    这样可以在O(n^2)的复杂度内找找到最大值，但是这样远远不够
    由二进制的表示法可知，越在高位的值越决定数字的大小。
    因此我们需要有一种高效的数据结构来存储已运算出来的xors
    方法是使用trie tree，前缀树，字典树，在树中将高位的值放置接近树的根。
    这种方法能够在O(1)的时间内取出最大的起点st。
- Postal Vans
    这道题太难了！！！
    奇怪DP + 大数模板， 最坑的是我选择了矩阵乘法替换记忆化数组。
    写了一天脑壳疼，最后大数模板也没有写对。从Github上找了一个大数模板，最终得以通过。
    模板地址：https://gist.github.com/ar-pa/957297fb3f88996ead11


Section_6.4
- Wisconsin Squares
    没什么特别的,规矩DFS即可.
- The Primes
    一道搜索题,搜索的顺序非常重要.
